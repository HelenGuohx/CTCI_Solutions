2.1 Remove Dups: Write code to remove duplicates from an unsorted linked list.
FOLLOW UP
How would you solve this problem if a temporary buffer is not allowed?

Hints: #9, #40

Example
input: 1 -> 3 -> 2 -> 2 -> 1
output: 1 -> 3 -> 2

set = {}

//loop though linkedlist l
while node != null
    if set contains node.val
        //remove the node
        parent.next = node.next
    else
        set.add(node.val)
    node = node.next ??should i set current node.next = null

FOLLOW UP
How would you solve this problem if a temporary buffer is not allowed?

p1 = head
p2 = head.next

while p1 != null
    while p2 != null
        if p2.val == p1.val
            //remove p2
            parent.next = p2.next
        p2 = p2.next
    p1 = p1.next


#9 Have you tried a hash table? You should be able to do this in a single pass of the linked
   list.
#40 Without extra space, you'll need O(N^2) time. Try using two pointers, where the second
one searches ahead of the first one.